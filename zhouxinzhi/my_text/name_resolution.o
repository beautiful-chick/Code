	.arch armv6
	.eabi_attribute 28, 1
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 2
	.eabi_attribute 30, 6
	.eabi_attribute 34, 1
	.eabi_attribute 18, 4
	.file	"name_resolution.c"
	.section	.rodata
	.align	2
.LC0:
	.ascii	"help\000"
	.align	2
.LC1:
	.ascii	"net_name\000"
	.text
	.section	.rodata
	.align	2
.LC3:
	.ascii	"%s usage:\012\000"
	.align	2
.LC4:
	.ascii	"--net_name[-n]:Domain name\000"
	.align	2
.LC5:
	.ascii	"--help[-h]:help menu\000"
	.text
	.align	2
	.global	printf_help
	.arch armv6
	.syntax unified
	.arm
	.fpu vfp
	.type	printf_help, %function
printf_help:
	@ args = 0, pretend = 0, frame = 8
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{fp, lr}
	add	fp, sp, #4
	sub	sp, sp, #8
	str	r0, [fp, #-8]
	ldr	r1, [fp, #-8]
	ldr	r0, .L3
	bl	printf
	ldr	r0, .L3+4
	bl	puts
	ldr	r0, .L3+8
	bl	puts
	nop
	sub	sp, fp, #4
	@ sp needed
	pop	{fp, pc}
.L4:
	.align	2
.L3:
	.word	.LC3
	.word	.LC4
	.word	.LC5
	.size	printf_help, .-printf_help
	.section	.rodata
	.align	2
.LC6:
	.ascii	"webn_toaddr argument error[%s]\012\000"
	.align	2
.LC7:
	.ascii	"official hostname:%s\012\000"
	.align	2
.LC8:
	.ascii	"other hostname:%s\012\000"
	.align	2
.LC9:
	.ascii	"address type [%d],address long,[%d],address [%s]\012"
	.ascii	"\000"
	.align	2
.LC10:
	.ascii	"unknow address %s\012\000"
	.text
	.align	2
	.global	webn_toaddr
	.syntax unified
	.arm
	.fpu vfp
	.type	webn_toaddr, %function
webn_toaddr:
	@ args = 0, pretend = 0, frame = 56
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{r4, r5, fp, lr}
	add	fp, sp, #12
	sub	sp, sp, #56
	str	r0, [fp, #-64]
	mov	r3, #0
	str	r3, [fp, #-16]
	mov	r3, #0
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-64]
	cmp	r3, #0
	bne	.L6
	bl	__errno_location
	mov	r3, r0
	ldr	r3, [r3]
	mov	r0, r3
	bl	strerror
	mov	r3, r0
	mov	r1, r3
	ldr	r0, .L16
	bl	printf
	mov	r3, #0
	b	.L15
.L6:
	mov	r0, #20
	bl	malloc
	mov	r3, r0
	str	r3, [fp, #-24]
	mov	r2, #20
	mov	r1, #0
	ldr	r0, [fp, #-24]
	bl	memset
	ldr	r0, [fp, #-64]
	bl	gethostbyname
	str	r0, [fp, #-24]
	ldr	r3, [fp, #-24]
	ldr	r3, [r3]
	mov	r1, r3
	ldr	r0, .L16+4
	bl	printf
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #4]
	str	r3, [fp, #-16]
	b	.L8
.L9:
	ldr	r3, [fp, #-16]
	ldr	r3, [r3]
	mov	r1, r3
	ldr	r0, .L16+8
	bl	printf
	ldr	r3, [fp, #-16]
	add	r3, r3, #4
	str	r3, [fp, #-16]
.L8:
	ldr	r3, [fp, #-16]
	ldr	r3, [r3]
	cmp	r3, #0
	bne	.L9
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #8]
	cmp	r3, #2
	beq	.L10
	cmp	r3, #10
	bne	.L11
.L10:
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #16]
	str	r3, [fp, #-16]
	b	.L12
.L13:
	ldr	r3, [fp, #-24]
	ldr	r4, [r3, #8]
	ldr	r3, [fp, #-24]
	ldr	r5, [r3, #12]
	ldr	r3, [fp, #-24]
	ldr	r0, [r3, #8]
	ldr	r3, [fp, #-16]
	ldr	r1, [r3]
	sub	r2, fp, #56
	mov	r3, #32
	bl	inet_ntop
	mov	r3, r0
	mov	r2, r5
	mov	r1, r4
	ldr	r0, .L16+12
	bl	printf
	ldr	r3, [fp, #-16]
	add	r3, r3, #4
	str	r3, [fp, #-16]
.L12:
	ldr	r3, [fp, #-16]
	ldr	r3, [r3]
	cmp	r3, #0
	bne	.L13
	b	.L14
.L11:
	bl	__errno_location
	mov	r3, r0
	ldr	r3, [r3]
	mov	r0, r3
	bl	strerror
	mov	r3, r0
	mov	r1, r3
	ldr	r0, .L16+16
	bl	printf
	nop
.L14:
	ldr	r3, [fp, #-24]
	ldr	r3, [r3, #16]
	str	r3, [fp, #-20]
	ldr	r3, [fp, #-20]
.L15:
	mov	r0, r3
	sub	sp, fp, #12
	@ sp needed
	pop	{r4, r5, fp, pc}
.L17:
	.align	2
.L16:
	.word	.LC6
	.word	.LC7
	.word	.LC8
	.word	.LC9
	.word	.LC10
	.size	webn_toaddr, .-webn_toaddr
	.section	.rodata
	.align	2
.LC12:
	.ascii	"hn:\000"
	.align	2
.LC13:
	.ascii	"webname[%s]\012\000"
	.align	2
.LC11:
	.word	.LC0
	.word	0
	.word	0
	.word	104
	.word	.LC1
	.word	1
	.word	0
	.word	110
	.word	0
	.word	0
	.word	0
	.word	0
	.text
	.align	2
	.global	main
	.syntax unified
	.arm
	.fpu vfp
	.type	main, %function
main:
	@ args = 0, pretend = 0, frame = 120
	@ frame_needed = 1, uses_anonymous_args = 0
	push	{fp, lr}
	add	fp, sp, #4
	sub	sp, sp, #128
	str	r0, [fp, #-120]
	str	r1, [fp, #-124]
	mvn	r3, #0
	str	r3, [fp, #-12]
	mov	r3, #0
	str	r3, [fp, #-8]
	ldr	r3, .L26
	sub	ip, fp, #112
	mov	lr, r3
	ldmia	lr!, {r0, r1, r2, r3}
	stmia	ip!, {r0, r1, r2, r3}
	ldmia	lr!, {r0, r1, r2, r3}
	stmia	ip!, {r0, r1, r2, r3}
	ldm	lr, {r0, r1, r2, r3}
	stm	ip, {r0, r1, r2, r3}
	mov	r3, #0
	str	r3, [fp, #-16]
	b	.L19
.L23:
	ldr	r3, [fp, #-12]
	cmp	r3, #104
	beq	.L20
	ldr	r3, [fp, #-12]
	cmp	r3, #110
	beq	.L21
	b	.L19
.L20:
	ldr	r3, [fp, #-124]
	ldr	r3, [r3]
	mov	r0, r3
	bl	printf_help
	mov	r3, #0
	b	.L25
.L21:
	ldr	r3, .L26+4
	ldr	r3, [r3]
	str	r3, [fp, #-8]
	nop
.L19:
	sub	r3, fp, #112
	mov	r2, #0
	str	r2, [sp]
	ldr	r2, .L26+8
	ldr	r1, [fp, #-124]
	ldr	r0, [fp, #-120]
	bl	getopt_long
	str	r0, [fp, #-12]
	ldr	r3, [fp, #-12]
	cmn	r3, #1
	bne	.L23
	ldr	r3, [fp, #-8]
	cmp	r3, #0
	bne	.L24
	ldr	r3, [fp, #-124]
	ldr	r3, [r3]
	mov	r0, r3
	bl	printf_help
	mvn	r3, #0
	b	.L25
.L24:
	ldr	r1, [fp, #-8]
	ldr	r0, .L26+12
	bl	printf
	ldr	r0, [fp, #-8]
	bl	webn_toaddr
	str	r0, [fp, #-16]
	ldr	r3, [fp, #-16]
	ldr	r1, [r3]
	sub	r2, fp, #48
	mov	r3, #32
	mov	r0, #2
	bl	inet_ntop
	mov	r3, r0
	mov	r0, r3
	bl	puts
	mov	r3, #0
.L25:
	mov	r0, r3
	sub	sp, fp, #4
	@ sp needed
	pop	{fp, pc}
.L27:
	.align	2
.L26:
	.word	.LC11
	.word	optarg
	.word	.LC12
	.word	.LC13
	.size	main, .-main
	.ident	"GCC: (Raspbian 10.2.1-6+rpi1) 10.2.1 20210110"
	.section	.note.GNU-stack,"",%progbits
